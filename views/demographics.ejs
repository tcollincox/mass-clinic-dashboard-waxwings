<!DOCTYPE html>
<html>
    <head>
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css" integrity="sha384-HSMxcRTRxnN+Bdg0JdbxYKrThecOKuH5zCYotlSAcp1+c8xmyTe9GYg1l9a69psu" crossorigin="anonymous">
        <link type="text/css" href="css/style.css" rel="stylesheet">
        <title>
            Patient Demographics
        </title>

        <input type="checkbox" name="" class="tab-btn"/>

        <div class="dropdown-container">
            <input type="checkbox" name="" id="" class="dropdown-btn">
            <div class="dropdown-list">
                 
                <a href="/applications">Applications</a> 
                <a href="/bloodA1C">Blood A1C</a> 
                <a href="/bloodPressure">Blood Pressure</a>   
                <a href="/cholesterol">Cholesterol</a> 
                <a href="/demographics">Demographics</a> 
                <a href="/followups">Follow-ups</a> 
                <a href="/noShowPatient">No Show Patients</a> 
                <a href="/patientAccessibility">Patient Accessibility</a> 
                <a href="/patientArrivalTime">Patient Arrival Times</a> 
                <a href="/patientEncounter">Patients Encountered</a> 
                <a href="/patientEnrollYear">Patient Enrolled Years</a> 
                <a href="/patientReferredMassClinic">Mass Clinic Referrals</a> 
                <a href="/patientReferredToTelehealth">Telehealth Referrals</a> 
                <a href="/patientTypeServe">Type of Patients Served</a> 
                <a href="/pctChronicCare">Chronic Care Percentages</a> 
                <a href="/pctEligibleHealthCare">Eligible for Prescription Assistance</a> 
                <a href="/pctFiftyPerGeneralFollowUp">Possibility of Follow-up Appointment Percentages</a> 
                <a href="/pctPrescriptApp">Patients Eligible for Prescription Assistance</a> 
                <a href="/pctTwentyPerReferral">Eligible for Health Care Coverage</a> 
                <a href="/placeOfCare">Place of Care</a> 
                <a href="/providedScreening">Provided Screenings</a> 
                <a href="/twentyFivePerTelehealthReferred">Patients Referred to Telehealth Percentages</a> 
                <a href="/uniquePatientInYear">Unique Patients Seen by Year</a> 
                <a href="/volunteers">Volunteers</a> 
            </div>    
        </div> 

        <div class="nav-bar">
            <ol>
                <li><a href="/">Main Dashboard</a></li>
                <li><a href="/DashPatientsEncountered">Patients Encountered</a></li>
                <li><a href="/DashPatientGoalOutcomes">Patient Goal & Outcomes</a></li> 
                <li><a href="/DashDemographics">Demographics</a></li>
                <li><a href="/DashPatientAppointments">Patient Appointments</a></li>
            </ol>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <style>
            .chartBox{
                width:300px;
            }
            *{
                margin: 0px;
                padding: 0px;
                padding-top: 20px ;
            }
            
            h1{
                text-align: center;
                margin: 0px auto;
                width: 50%;
            }
            h3{
                text-align: center;
            }
            table{
                border-collapse: collapse;
            }
            table, td, th{
                border: 1px solid black ;
                text-align: center;
                padding:5px;
            }
            #genderDonutGraph, #ageDonutGraph, #raceDonutGraph {
            width: 320px;
            height: 350px;
            }
            .chartBox{
                float: left;
            }
            .data_table{
                visibility: collapse;
            }
            .aligned{
                width:auto;
                height: 600px;
                display: flex;
                justify-content: center;
            }
        </style>
    </head>
    <body>
        <h1 class="header">Demographics from MASS Clinic</h1>
        

        <table class="data_table" id="demographics_table">
            <tr>
                <th>Demographic Type</th>
                <th>Amount of Patients</th>
                <th>Year</th>
            </tr>
            
            <% demographics.forEach(function(o) { %>
                <tr>
                    <td><%= o.DemographicType %></td>
                    <td><%= o.PatientAmount %></td>
                    <td><%= o.RecordedYear %></td>
                </tr>
            <% }); %>

        </table>


        <div id="aligned">
            <!--first donut graph for gender-->
            <div class="chartBox">
                <h3>Gender</h3>
                <canvas id="genderDonutGraph"></canvas>
            </div>

            <!--third donut graph for race-->
            <div class="chartBox">
                <h3>Race</h3>
                <canvas id="raceDonutGraph"></canvas>
            </div>
        </div>
        <div class="new-line">
            <label>Select Recored Year</label>
            <select id="time-frame" name="time-frame">
            </select>
        </div>
        <script src="javascript/array.js" type="text/javascript"></script>
        <script>
            let demographicTypeArray =[];
            let demogrpahicPatientAmountArray = [];
            let demographicRecordedYear = [];

            let dataArray = returnArrayFromTable("demographics_table");
            console.log(dataArray);
            let years = makeYearArray(dataArray, "Year");
            addSelectYears(years);

            //gender logic
            let genderArray = [];
            dataArray.forEach(element => {
                if(element['Demographic Type'] == 'Male' || element['Demographic Type'] == 'Female'){
                    genderArray.push(element);
                }
            });
            let chosenField = 'Amount of Patients'
            let GenderDataArray = dataArrayByYear(genderArray, 2019, "Year");
            let valuesArray = desiredArrayByYearWithYearName(2019, GenderDataArray, chosenField, 'Year');
            let labelArray = makeLabelArray(GenderDataArray, "Demographic Type", false);
            let colorArray = makeMultipleColorArray( 2, false, 1);
            console.log(colorArray);
            let globalChart = generateChartGiveId(labelArray, valuesArray, colorArray, "Number Of Patients", 'pie', 'genderDonutGraph' )
            

            document.getElementById('time-frame').addEventListener('change', function() {
                    let changedGenderDataArray = dataArrayByYear(genderArray, this.value, "Year");
                    let changedValuesArray = desiredArrayByYearWithYearName(this.value, genderArray, chosenField, 'Year');
                    let changedLabelArray = makeLabelArray(changedGenderDataArray, "Demographic Type", false);
                    let changedColorArray = makeMultipleColorArray( 2, false, years.length);
                    if(this.value == "All Years"){
                        changedColorArray = makeMultipleColorArray(2, false, years.length);
                    }
                    else{
                        changedColorArray = makeMultipleColorArray(2, true, 1);
                    }
                    globalChart.destroy();
                    globalChart = generateChartGiveId(changedLabelArray, changedValuesArray, changedColorArray, "Number Of Patients", 'pie', 'genderDonutGraph');
                });


            // //race logic
            

            // function arrayTable(table_id){
            //     let table = document.getElementById(table_id).rows;
            //     for(let i = 1; i < table.length; i++ ){
            //         demographicTypeArray.push(table[i].cells[0].childNodes[0].nodeValue);
            //         demogrpahicPatientAmountArray.push(table[i].cells[1].childNodes[0].nodeValue);
            //         demographicRecordedYear.push(table[i].cells[2].childNodes[0].nodeValue);
            //     }//end for
            // }//end function
            // arrayTable("demographics_table");
            
            
            // //Third Donut Graph data, config and render
            // //data for age
            // const dataRace = {
            //     labels: [demographicTypeArray[12], demographicTypeArray[15], demographicTypeArray[18], demographicTypeArray[21], demographicTypeArray[24], demographicTypeArray[27]],
            //     //['African-American', "Hispanic/Latino", "Multi-Racial", "White", "Other", "Undeclared"],
            //     datasets: [
            //         {
            //             label: 'Race of Patient',
            //             data: [demogrpahicPatientAmountArray[12], demogrpahicPatientAmountArray[15], demogrpahicPatientAmountArray[18], demogrpahicPatientAmountArray[21], demogrpahicPatientAmountArray[24], demogrpahicPatientAmountArray[27]],
            //             //[565, 399, 142, 732, 4, 0],
            //             backgroundColor: [
            //             'rgb(45, 187, 204 )', 'rgb(23, 195, 178 )', 'rgb(13, 164, 192 )', 'rgb(3, 132, 206 )', 'rgb(26, 109, 185 )', 'rgb(49, 86, 163 )', 'rgb(11, 49, 66 )',
            //             ],
            //             borderColor: [
            //                 'rgba(0, 0, 0, 1)',
            //                 'rgba(0, 0, 0, 1)',
            //                 'rgba(0, 0, 0, 1)',
            //                 'rgba(0, 0, 0, 1)',
            //                 'rgba(0, 0, 0, 1)',
            //                 'rgba(0, 0, 0, 1)',
            //             ],
            //             borderWidth: 2,
            //         }]
            // };
            // //config for third donut graph
            // const configRace = {
            //     type: 'doughnut',
            //     data: dataRace,
            //     options: {
            //         cutoutPercentage: 80,
            //         animation: {
            //             animateScale: true,
            //         }
            //     }   
            // };
            // //render third graph
            // const raceDonutGraph = new Chart(
            //     document.getElementById('raceDonutGraph'),
            //     configRace
            // );

            //race logic
            let raceArray = [];
            dataArray.forEach(element => {
                if(element['Demographic Type'] == 'African American' || element['Demographic Type'] == 'Hispanic / Latino' || element['Demographic Type'] == 'Multi-Racial' || element['Demographic Type'] == 'White' || element['Demographic Type'] == 'Other'){
                    raceArray.push(element);
                }
            });
            console.log(raceArray);
            let chosenRaceField = 'Amount of Patients'
            let raceDataArray = dataArrayByYear(raceArray, 2019, "Year");
            let valuesRaceArray = desiredArrayByYearWithYearName(2019, raceDataArray, chosenRaceField, 'Year');
            let labelRaceArray = makeLabelArray(raceDataArray, "Demographic Type", false);
            let colorRaceArray = makeMultipleColorArray( 5, false, 1);
            console.log(colorArray);
            let globalRaceChart = generateChartGiveId(labelRaceArray, valuesRaceArray, colorRaceArray, "Number Of Patients", 'pie', 'raceDonutGraph' )
            

            document.getElementById('time-frame').addEventListener('change', function() {
                    let changedRaceDataArray = dataArrayByYear(raceArray, this.value, "Year");
                    let changedValuesRaceArray = desiredArrayByYearWithYearName(this.value, raceArray, chosenRaceField, 'Year');
                    let changedLabelRaceArray = makeLabelArray(changedRaceDataArray, "Demographic Type", false);
                    let changedColorRaceArray = makeMultipleColorArray( 5, false, years.length);
                    if(this.value == "All Years"){
                        changedColorRaceArray = makeMultipleColorArray(5, false, years.length);
                    }
                    else{
                        changedColorRaceArray = makeMultipleColorArray(5, true, 1);
                    }
                    globalRaceChart.destroy();
                    globalRaceChart = generateChartGiveId(changedLabelRaceArray, changedValuesRaceArray, changedColorRaceArray, "Number Of Patients", 'pie', 'raceDonutGraph');
                });


        </script>


    </body>
</html>